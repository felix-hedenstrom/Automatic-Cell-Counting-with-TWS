#look at what elements you are working with
head(newsid1_s,3)
max_l <- length(newsid1_s[[1]])
##parseit takes a list of seperated relevent name elements from every image
parseit <-function(x,object_num){
newsid1_anum <- NA
for (i in 1:length(x)){
newsid1_anum <- c(newsid1_anum, x[[i]][object_num])
}
newsid1_anum <- newsid1_anum[-1]
}
###these are what you need to adjust for different names of images!!!!####
newsid1_anum <- parseit(x = newsid1_s, object_num = 2)
newsid1_snum <- parseit(x = newsid1_s, object_num = 3)
newsid1_fnum <- parseit(x = newsid1_s, object_num = max_l)
fnumsid1_s <- strsplit(newsid1_fnum, "") #### sometimes another seperation step is required
newsid1_fnum1 <- parseit(x = fnumsid1_s, object_num = 1)
newsid1_fnum2 <- parseit(x = fnumsid1_s, object_num = 2)
newsid1_fnum3 <- paste(newsid1_fnum1,newsid1_fnum2, sep = "") # for clarity, seperated objects can be recombined in order with paste()
####making the data frames-----------
id1_df <- cbind(newsid1_anum, newsid1_snum, newsid1_fnum3)
head(id1_df)
#return(id1_df_squish)
return(id1_df)
}
squish <- function(input_df){
id1_df_squish <- NA
for (i in 1:dim(input_df)[1]) {
id1_df_squish[i] <- paste0(input_df[i,], sep = "_", collapse = "")
}
return(id1_df_squish)
}##simple function to combine rows of the df with info
get_match_id <- function(sub_inv,full_inv){
match_id <- NA
for (i in 1: length(sub_inv) ){
pineapple <- grep(sub_inv[i],full_inv)
if (sum(pineapple) == 0) {print("not found")} else match_id[i] <- pineapple
}
match_id <- match_id[complete.cases(match_id)]
}
new_dat <- read.csv("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/training_area/testing_area/Weka_Output_Counted/classifier36/classifier36_final.csv")
new_dat <- read.csv("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/training_area/testing_area/Weka_Output_Counted/classifier36/classifier36_final.csv")
t.test(new_dat$Counts ~ new_dat$geno)
###looking at the numbers by genoype/sex(need to assign geno in excel currently)###
df <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_roi_after_Npt3_counted.csv")
df2 <- df[df$geno == "wt" | df$geno == "gp",]
df2$count <- as.numeric(df2$count)
dim(df2)
t.test(df2$count ~ df2$geno)
boxplot(df2$count ~ df2$geno)
stripchart(df2$count ~ df2$geno, vertical = TRUE,
method = "jitter", add = TRUE, pch = 20, col = 'blue')
##enterin hina data
dfh <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_cropped_Hina_count_all_geno_male_counted.csv")
dfh2 <- dfh[dfh$geno == "wt" | dfh$geno == "gp",]
write.csv(dfh2, "F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_cropped_Hina_count_all_geno_male_counted_wtgp_only.csv")
dim(dfh2)
#fixing an issue where Hina declined to count one of two planes for focus issues, but i and the auto counter did
head(dfh2)
dfh2[3,]
dfh2[3,3] #old was 85, the area norm count for hina is  are norm count= 85/.597869
dfh2[3,3] <- 85/.597869
t.test(dfh2$count ~ dfh2$geno)
boxplot(dfh2$count ~ dfh2$geno)
stripchart(dfh2$count ~ dfh2$geno, vertical = TRUE,
method = "jitter", add = TRUE, pch = 20, col = 'blue')
rbind(df2$lv,dfh2$lv)#visually making sure everything lined up
corr_two_hand_counts <- lm(df2$count ~ dfh2$count)
summary(corr_two_hand_counts)
corr_two_hand_counts_wt <- lm(df2$count[df2$geno == "wt"] ~ dfh2$count[dfh2$geno == "wt"])
summary(corr_two_hand_counts_wt)
corr_two_hand_counts_gp <- lm(df2$count[df2$geno == "gp"] ~ dfh2$count[dfh2$geno == "gp"])
summary(corr_two_hand_counts_gp)
big_r <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/automatic_segmentation/run_1/segmentations/Results_min_size_20_allgeno_v1auto.csv")
lv <- levels(as.factor(big_r$Label))
count <- NA
for (i in 1:length(lv)){
count[i]<- sum(big_r$Label == lv[i])
}
final <- data.frame(cbind(lv, count))
final$count <- as.numeric(final$count)
str(final$count)
dfot <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/automatic_segmentation/run_1/output/min20_wtgpgeno_onposter_7_20_2021_removed_missing_hand_counts.csv")
dim(dfot)
dfot_wtgp <- dfot[dfot$geno == "wt" | dfot$geno == "gp",]
dim(dfot_wtgp)
t.test(dfot_wtgp$count ~ dfot_wtgp$geno)
boxplot(dfot_wtgp$count ~ dfot_wtgp$geno)
stripchart(dfot_wtgp$count ~ dfot_wtgp$geno, vertical = TRUE,
method = "jitter", add = TRUE, pch = 20, col = 'blue')
corr_Auto_Hina_counts <- lm(dfot_wtgp$count ~ dfh2$count)
dim(dfot)
dim(new_dat)
finaldf <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/superdf_run1_area_adj.csv")
dim(finaldf)
corr_Theo_Hina_counts_wt <- lm(finaldf$count_theo_hand[finaldf$geno == "wt"] ~ finaldf$count_Hina_hand[finaldf$geno == "wt"])
summary(corr_Theo_Hina_counts_wt)
corr_Theo_Hina_counts_gp <- lm(finaldf$count_theo_hand[finaldf$geno == "gp"] ~ finaldf$count_Hina_hand[finaldf$geno == "gp"])
summary(corr_Theo_Hina_counts_gp)##this is now coming out much lower than before at .32 vs .46 previously beofre are adjustment, but area ajust shoudl have helped!!
dim(finaldf)
corr_Theo_auto_counts_gp_test <- lm(df2$count[df2$geno == "gp"] ~ finaldf$count_auto[finaldf$geno == "gp"])
summary(corr_Theo_auto_counts_gp_test)
corr_Theo_auto_counts_gp_test2 <- lm(df2$count[df2$geno == "gp"] ~ dfot_wtgp$count[dfot_wtgp$geno == "gp"])
summary(corr_Theo_auto_counts_gp_test2)
dim(dfot)
dfot_wtgp <- dfot[dfot$geno == "wt" | dfot$geno == "gp",]
dim(dfot_wtgp)
t.test(dfot_wtgp$count ~ dfot_wtgp$geno)
boxplot(dfot_wtgp$count ~ dfot_wtgp$geno)
stripchart(dfot_wtgp$count ~ dfot_wtgp$geno, vertical = TRUE,
method = "jitter", add = TRUE, pch = 20, col = 'blue')
corr_Auto_Hina_counts <- lm(dfot_wtgp$count ~ dfh2$count)
corr_Hina_auto_counts_wt <- lm(finaldf$count_Hina_hand[finaldf$geno == "wt"] ~ finaldf$count_auto[finaldf$geno == "wt"])
summary(corr_Hina_auto_counts_wt)
new_dat <- read.csv("F:/Theo/full_backup_3_23_2021/working_on_weka_manuscript/superdf_run1_area_adj_with_diff matching with new count 11_26_2021.csv")
new_dat
new_dat_no_na <- na.omit(new_dat)
dim(new_dat_no_na)
t.test(new_dat_no_na$count_theo_hand ~ new_dat$geno)
t.test(new_dat_no_na$count_theo_hand ~ new_dat_no_na$geno)
t.test(new_dat_no_na$count_Hina_hand ~ new_dat_no_na$geno)
t.test(new_dat_no_na$Counts ~ new_dat_no_na$geno)
new_dat_no_na$geno == new_dat_no_na$geno.1
manova_test <- manova(cbind(new_dat_no_na$count_theo_hand, new_dat_no_na$count_Hina_hand, new_dat_no_na$Counts) ~ new_dat_no_na$geno)
summary.aov(manova_test)
TukeyHSD(manova_test)
t.test(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "wt"] ~new_dat_no_na$Counts[new_dat_no_na$geno.1 == "wt"])
t.test(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "wt"] , new_dat_no_na$Counts[new_dat_no_na$geno.1 == "wt"])
t.test(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "wt"] , new_dat_no_na$Counts[new_dat_no_na$geno.1 == "wt"])
new_dat <- read.csv("F:/Theo/full_backup_3_23_2021/working_on_weka_manuscript/superdf_run1_area_adj_with_diff matching with new count 11_26_2021.csv")
new_dat_no_na <- na.omit(new_dat)
dim(new_dat_no_na)
t.test(new_dat_no_na$count_theo_hand ~ new_dat_no_na$geno)
t.test(new_dat_no_na$count_Hina_hand ~ new_dat_no_na$geno)
t.test(new_dat_no_na$Counts ~ new_dat_no_na$geno)
manova_test <- manova(cbind(new_dat_no_na$count_theo_hand, new_dat_no_na$count_Hina_hand, new_dat_no_na$Counts) ~ new_dat_no_na$geno)
summary.aov(manova_test)
TukeyHSD(manova_test)
new_dat_no_na$geno == new_dat_no_na$geno.1
t.test(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "wt"] , new_dat_no_na$Counts[new_dat_no_na$geno.1 == "wt"])
t.test(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "wt"] , new_dat_no_na$Counts[new_dat_no_na$geno.1 == "wt"])
t.test(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "gp"] , new_dat_no_na$Counts[new_dat_no_na$geno.1 == "gp"])
t.test(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "gp"] , new_dat_no_na$Counts[new_dat_no_na$geno.1 == "gp"])
new_dat_no_na
wt_hina_auto <- lm(new_dat_no_na$count_Hina_hand ~ new_dat_no_na$Counts)
summary(wt_hina_auto)
wt_hina_auto <- lm(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "wt"] ~ new_dat_no_na$Counts[new_dat_no_na$geno.1 == "wt"])
summary(wt_hina_auto)
gp_hina_auto <- lm(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "gp"] ~ new_dat_no_na$Counts[new_dat_no_na$geno.1 == "gp"])
summary(gpwt_hina_auto)
gp_hina_auto <- lm(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "gp"] ~ new_dat_no_na$Counts[new_dat_no_na$geno.1 == "gp"])
summary(gp_hina_auto)
theo_auto <- lm(new_dat_no_na$count_theo_hand ~ new_dat_no_na$Counts)
summary(theo auto)
summary(theo_auto)
wt_theo_auto <- lm(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "wt"] ~ new_dat_no_na$Counts[new_dat_no_na$geno.1 == "wt"])
summary(wt_theo_auto)
gp_theo_auto <- lm(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "gp"] ~ new_dat_no_na$Counts[new_dat_no_na$geno.1 == "gp"])
summary(gp_theo_auto)
hina_theo <- lm(new_dat_no_na$count_Hina_hand ~ new_dat_no_na$count_theo_hand)
summary(hina_theo)
wt_hina_theo <- lm(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "wt"] ~ new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "wt"])
summary(wt_hina_theo)
gp_hina_theo <- lm(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "gp"] ~ new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "gp"])
summary(gp_hina_theo)
me_ha_wt <- mean(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "wt"])
me_ha_wt
me_ha_gp <- mean(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "gp"])
sd_ha_gp <- sd(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "gp"])
me_ha_gp
sd_ha_wt
sd_ha_wt <- sd(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "wt"])
sd_ha_wt
sd_ha_gp <- sd(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "gp"])
sd_ha_gp
me_hb_gp <- mean(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "gp"])
sd_hb_gp <- sd(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "gp"])
me_hb_wt <- mean(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "wt"])
sd_hb_wt <- sd(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "wt"])
me_hb_wt
sd_hb_wt
me_hb_gp
sd_hb_gp
me_a_wt <- mean(new_dat_no_na$Counts[new_dat_no_na$geno.1 == "wt"])
sd_a_wt <- sd(new_dat_no_na$Counts[new_dat_no_na$geno.1 == "wt"])
me_a_wt
sd_a_wt
me_a_gp <- mean(new_dat_no_na$Counts[new_dat_no_na$geno.1 == "gp"])
sd_a_gp <- sd(new_dat_no_na$Counts[new_dat_no_na$geno.1 == "gp"])
me_a_gp
sd_a_gp
df1 <- cbind(c("wt","wt","wt", "gp", "gp", "gp"), c("hand_A","hand_B", "auto", "hand_A","hand_B", "auto"),
as.numeric(c(me_ha_wt,me_hb_wt,me_a_wt,me_ha_gp,me_hb_gp,me_a_gp)),
as.numeric(c(sd_ha_wt,sd_hb_wt,sd_a_wt,sd_ha_gp,sd_hb_gp,sd_a_gp))
)
df1 <- data.frame(df1)
names(df1) <-c("Genotype", "Count", "mean", "sd")
df1
str(df1)
df1$mean <-as.numeric(df1$mean)
df1$sd <-as.numeric(df1$sd)
df1$Genotype <- factor(df1$Genotype, levels = c("wt", "gp"))
X11()
ggplot(df1, aes(x=as.factor(Genotype), y=mean, fill=Count)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
library(ggplot2)
X11()
ggplot(df1, aes(x=as.factor(Genotype), y=mean, fill=Count)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
X11()
ggplot(df1, aes(x=as.factor(Genotype), y=mean, fill=Count)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
X11()
ggplot(df1, aes(x=as.factor(Genotype), y=mean, fill=Count)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
X11()
ggplot(df1, aes(x=as.factor(Genotype), y=mean, fill=Count)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
X11()
ggplot(df1, aes(x=as.factor(Genotype), y=mean, fill=measurement)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15))
df2 <- cbind(c("wt","gp","wt","gp","wt","gp"), c("hand_Awt","hand_Agp", "hand_Bwt","hand_Bgp", "auto_wt", "auto_gp"),
as.numeric(c(me_ha_wt,me_ha_gp,me_hb_wt,me_hb_gp,me_a_wt,me_a_gp)),
as.numeric(c(sd_ha_wt,sd_ha_gp,sd_hb_wt,sd_hb_gp,sd_a_wt,sd_a_gp)) )
X11()
ggplot(df2, aes(x=as.factor(Genotype), y=mean, fill=Count)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
str(df2)
df1
df2 <- data.frame(df2)
names(df2) <-c("Genotype", "Count", "mean", "sd")
df2
X11()
ggplot(df2, aes(x=as.factor(Genotype), y=mean, fill=Count)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
df2$mean <-as.numeric(df2$mean)
df2$sd <-as.numeric(df2$sd)
X11()
ggplot(df2, aes(x=as.factor(Genotype), y=mean, fill=Count)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
X11()
ggplot(df2, aes(x=as.factor(Genotype), y=mean, fill=Genotype)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
X11()
ggplot(df2, aes(x=as.factor(Count), y=mean, fill=Genotype)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
df2 <- cbind(c("wt","gp","wt","gp","wt","gp"), c("Observer A WT","Observer A gp120", "Observer B WT","Observer B gp120", "Auto count WT", "Auto count gp120"),
as.numeric(c(me_ha_wt,me_ha_gp,me_hb_wt,me_hb_gp,me_a_wt,me_a_gp)),
as.numeric(c(sd_ha_wt,sd_ha_gp,sd_hb_wt,sd_hb_gp,sd_a_wt,sd_a_gp)) )
df2 <- data.frame(df2)
names(df2) <-c("Genotype", "Count", "mean", "sd")
df2
df2$mean <-as.numeric(df2$mean)
df2$sd <-as.numeric(df2$sd)
X11()
ggplot(df2, aes(x=as.factor(Count), y=mean, fill=Genotype)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
library(ggplot2)
###new run with classifier pipeline 11/26/2021
new_dat <- read.csv("F:/Theo/full_backup_3_23_2021/working_on_weka_manuscript/superdf_run1_area_adj_with_diff matching with new count 11_26_2021.csv")
new_dat_no_na <- na.omit(new_dat)
dim(new_dat_no_na)
t.test(new_dat_no_na$count_theo_hand ~ new_dat_no_na$geno)
t.test(new_dat_no_na$count_Hina_hand ~ new_dat_no_na$geno)
t.test(new_dat_no_na$Counts ~ new_dat_no_na$geno)
manova_test <- manova(cbind(new_dat_no_na$count_theo_hand, new_dat_no_na$count_Hina_hand, new_dat_no_na$Counts) ~ new_dat_no_na$geno)
summary.aov(manova_test)
TukeyHSD(manova_test)
t.test(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "wt"] , new_dat_no_na$Counts[new_dat_no_na$geno.1 == "wt"])
t.test(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "wt"] , new_dat_no_na$Counts[new_dat_no_na$geno.1 == "wt"])
t.test(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "gp"] , new_dat_no_na$Counts[new_dat_no_na$geno.1 == "gp"])
t.test(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "gp"] , new_dat_no_na$Counts[new_dat_no_na$geno.1 == "gp"])
t.test(new_dat_no_na$count_theo_hand ~ new_dat_no_na$geno)
t.test(new_dat_no_na$count_Hina_hand ~ new_dat_no_na$geno)
t.test(new_dat_no_na$Counts ~ new_dat_no_na$geno)
######copied from my old script, making big mean count graph
####getting in Hinas (and my ) area adj count
superdf$count_new_auto <- final_blah$auto_count
me_ha_wt <- mean(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "wt"])
sd_ha_wt <- sd(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "wt"])
me_ha_gp <- mean(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "gp"])
sd_ha_gp <- sd(new_dat_no_na$count_Hina_hand[new_dat_no_na$geno.1 == "gp"])
#hand count b
me_hb_wt <- mean(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "wt"])
sd_hb_wt <- sd(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "wt"])
me_hb_gp <- mean(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "gp"])
sd_hb_gp <- sd(new_dat_no_na$count_theo_hand[new_dat_no_na$geno.1 == "gp"])
#auto count
me_a_wt <- mean(new_dat_no_na$Counts[new_dat_no_na$geno.1 == "wt"])
sd_a_wt <- sd(new_dat_no_na$Counts[new_dat_no_na$geno.1 == "wt"])
me_a_gp <- mean(new_dat_no_na$Counts[new_dat_no_na$geno.1 == "gp"])
sd_a_gp <- sd(new_dat_no_na$Counts[new_dat_no_na$geno.1 == "gp"])
df1 <- cbind(c("wt","wt","wt", "gp", "gp", "gp"), c("hand_A","hand_B", "auto", "hand_A","hand_B", "auto"),
as.numeric(c(me_ha_wt,me_hb_wt,me_a_wt,me_ha_gp,me_hb_gp,me_a_gp)),
as.numeric(c(sd_ha_wt,sd_hb_wt,sd_a_wt,sd_ha_gp,sd_hb_gp,sd_a_gp))
)
df1 <- data.frame(df1)
names(df1) <-c("Genotype", "Count", "mean", "sd")
df1
str(df1)
df1$mean <-as.numeric(df1$mean)
df1$sd <-as.numeric(df1$sd)
df1$Genotype <- factor(df1$Genotype, levels = c("wt", "gp"))
#library(ggplot2)
X11()
ggplot(df1, aes(x=as.factor(Genotype), y=mean, fill=Count)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
df2 <- cbind(c("wt","gp","wt","gp","wt","gp"), c("Observer A WT","Observer A gp120", "Observer B WT","Observer B gp120", "Auto count WT", "Auto count gp120"),
as.numeric(c(me_ha_wt,me_ha_gp,me_hb_wt,me_hb_gp,me_a_wt,me_a_gp)),
as.numeric(c(sd_ha_wt,sd_ha_gp,sd_hb_wt,sd_hb_gp,sd_a_wt,sd_a_gp)) )
df2 <- data.frame(df2)
names(df2) <-c("Genotype", "Count", "mean", "sd")
df2
df2$mean <-as.numeric(df2$mean)
df2$sd <-as.numeric(df2$sd)
X11()
ggplot(df2, aes(x=as.factor(Count), y=mean, fill=Genotype)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
superdf
class36final <- read.csv("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/training_area/testing_area/Weka_Output_Counted/classifier36/classifier36_final.csv")
head(class36final)
class36res <- read.csv("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/training_area/testing_area/Weka_Output_Counted/classifier36/classifier36_Results_test_data.csv")
head(class36res)
class36res <- read.csv("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/training_area/testing_area/Audit_Counted/classifier36_Final_full_data.csv")
head(class36res)
class_results
img_names <- levels(as.factor(class36res))
final_blah <- data.frame(name = NA, tp = NA, fp = NA, fn= NA)
hand_ini <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/new_val_train_etc/Results_hand_roi_8_3_2021.csv")
hand_ini
new_dat_no_na
hand_ini <- read.csv("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/training_area/testing_area/Audit_Hand_Counts/classifier36_testing_Results.csv")
lv_h <- levels(as.factor(hand_ini$Label))
count_h <- NA
for (i in 1:length(lv_h)){
count_h[i]<- sum(hand_ini$Label == lv_h[i])
}
hand_final <- data.frame(cbind(lv_h, count_h))
hand_final$count_h <- as.numeric(hand_final$count_h)
hand_final
class_results <- class36res
img_names <- levels(as.factor(class36res))
final_blah <- data.frame(name = NA, tp = NA, fp = NA, fn= NA)
class_results$Label
class_results
tot_tp <- sum(as.numeric(class_results$tp))
tot_fp <- sum(as.numeric(class_results$fp))
tot_fn <- sum(as.numeric(class_results$fn))
#precision is tp/(tp + fp)
prec <- tot_tp/(tot_tp + tot_fp)
#recall is tp/(tp + fn)
reca <- tot_tp/(tot_tp + tot_fn)
F1 <- 2*(prec*reca/(prec + reca))
prec <- round(prec, 4)
reca <- round(reca, 4)
F1 <- round(F1, 4)
print(paste(class," precision = ", prec ))
print(paste(class," recall = ", reca ))
print(paste(class," F1 = ", F1 ))
prec
class = "classifier36"
print(paste(class," precision = ", prec ))
print(paste(class," recall = ", reca ))
print(paste(class," F1 = ", F1 ))
geno <- new_dat_no_na$geno.1
final_blah$geno <- geno
prec2 <- final_blah$tp/(final_blah$tp + final_blah$fp)
reca2 <-final_blah$tp/(final_blah$tp + final_blah$fn)
F1_2 <- 2*(prec2*reca2/(prec2 + reca2))
final_blah$prec2 <- prec2
final_blah$reca2 <- reca2
final_blah$F1_2 <-  F1_2
final_blah$F1_2
reca2
prec2 <- class_results$tp/(class_results$tp + class_results$fp)
prec2
prec2 <- class_results$tp/(class_results$tp + class_results$fp)
reca2 <- class_results$tp/(class_results$tp + class_results$fn)
F1_2 <- 2*(prec2*reca2/(prec2 + reca2))
final_blah$prec2 <- prec2
final_blah$reca2 <- reca2
final_blah$F1_2 <-  F1_2
p_g_tt <- t.test(prec2 ~ geno)
p_g_tt_p <- p_g_tt$p.value
p_g_tt
r_g_tt <- t.test(reca2 ~ geno)
r_g_tt_p <- r_g_tt$p.value
r_g_tt
F1_g_tt <- t.test(F1_2 ~ geno)
F1_g_tt_p <- F1_g_tt$p.value
F1_g_tt
p_wt_mean <- p_g_tt$estimate
p_wt_mean
p_ev0_mean <- p_g_tt$estimate[1]
p_ev1_mean <- p_g_tt$estimate[2]
p_ev0_mean
p_ev1_mean
r_g_tt <- t.test(reca2 ~ geno)
r_g_tt_p <- r_g_tt$p.value
r_ev0_mean <- r_g_tt$estimate[1]
r_ev1_mean <- r_g_tt$estimate[2]
r_g_tt
r_ev0_mean
r_ev1_mean
F1_g_tt <- t.test(F1_2 ~ geno)
F1_g_tt_p <- F1_g_tt$p.value
F1_ev0_mean <- F1_g_tt$estimate[1]
F1_ev1_mean <- F1_g_tt$estimate[2]
F1_ev0_mean
F1_ev1_mean
alldata <- read.csv("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/flurocells alt weka test set/fluocells/all_masks/overall msk objects Results.csv")
head(alldata)
dim(alldata)
somedata <- alldata[alldata$Min != 0]
somedata <- alldata[alldata$Min != 0,]
dim(somedata)
write.csv(somedata, "F:/Theo/full_backup_3_23_2021/Kaul_lab_work/flurocells alt weka test set/fluocells/all_masks/overall msk objects Results only objects.csv")
big_folder <-   file.choose()
old_files <- list.files("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/training_area/Weka_Output/*")
old_files <- list.files("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/training_area/Weka_Output/*")
old_files
old_files <- list.files("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/training_area/Weka_Output/")
old_files
folder = "classifier"
curr_folder <- paste0("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/training_area/Weka_Output/", folder)
curr_files <- list.files(curr_folder)
curr_files
file = curr_files[1]
new_name <- strsplit(file, "SEG")
new_name
new_name[[1]][2]
file.rename(file,new_name[[1]][2] )
curr_files
setwd(curr_folder)
curr_folder
file.rename(file,new_name[[1]][2] )
for (folder in (old_folders)){
curr_folder <- paste0("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/training_area/Weka_Output/", folder)
curr_files <- list.files(curr_folder)
setwd(curr_folder)
for (file in curr_files){
new_name <- strsplit(file, "SEG")
file.rename(file,new_name[[1]][2] )
}
}
old_folders <- list.files("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/training_area/Weka_Output/")
old_folders
for (folder in (old_folders)){
curr_folder <- paste0("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/training_area/Weka_Output/", folder)
curr_files <- list.files(curr_folder)
setwd(curr_folder)
for (file in curr_files){
new_name <- strsplit(file, "SEG")
file.rename(file,new_name[[1]][2] )
}
}
getwd()
