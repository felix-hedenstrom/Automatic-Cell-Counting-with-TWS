venn.diagram(list(B = (datain_mo_gp1$AR <= 1.5 & datain_mo_gp1$Circ. >= 0.9), A = (datain_mo_wt1$AR <= 1.5 & datain_mo_wt1$Circ. >= 0.9)),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,lty =2, main ="female cortex A_lcn2ko",
filename = "test.png")
datain <- read.csv("C:/Users/User/Desktop/Kaul_lab_work/daniel venn/female cortex for venn.csv")
datain$gp120
datain$LCN2ko.gp120
venn.diagram(list(B = (datain_mo_gp1$AR <= 1.5 & datain_mo_gp1$Circ. >= 0.9), A = (datain_mo_gp1$AR >= 1.5 & datain_mo_gp1$Circ. <= 0.9)),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,lty =2, main ="female cortex A_lcn2ko",
filename = "test.png")
datain_mo_gp1$AR <= 1.5 & datain_mo_gp1$Circ. >= 0.9
datain_mo1 <- datain_mo[datain_mo$points == 1]
datain_mo1 <- datain_mo[datain_mo$points == 1,]
library(ggplot2)
ggplot(data=datain_mo1, aes(x=(datain_mo_gp1$AR <= 1.5 & datain_mo_gp1$Circ. >= 0.9),fill = geno)) + geom_histogram()
arecirc_wt1 <- datain_mo_wt1$Label[datain_mo_wt1$AR <= 1.5 & datain_mo_wt1$Circ. >= 0.9]
length(arecirc_wt1)
venn.diagram(list(B = arecirc_wt1, A =datain_mo_wt1$Label),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,cat.fontface = 4,lty =2, fontfamily =1, main ="female cortex A_lcn2ko",
filename = "test2.png")
venn.diagram(list(B = arecirc_wt1, A =datain_mo_wt1$Label),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,cat.fontface = 4,lty =2, main ="female cortex A_lcn2ko",
filename = "test2.png")
arecirc_wt1
datain_mo_wt1$Label
venn.diagram(list(B = arecirc_wt1, A =datain_mo_wt1$Label),fill = c("red", "green"), filename = "test2.png")
venn.diagram(list(B = as.character(arecirc_wt1), A =as.character(datain_mo_wt1$Label)),fill = c("red", "green"), filename = "test2.png")
sum(as.character(datain_mo_wt1$Label) == as.character(arecirc_wt1))
venn.diagram(list(B = datain$gp120, A = datain$LCN2ko.gp120),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,cat.fontface = 4,lty =2, fontfamily =1, main ="female cortex A_lcn2ko",
filename = "f_c_lcn2ko.png");
venn.diagram(list(B = datain$gp120, A = datain$LCN2ko.gp120),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,cat.fontface = 4,lty =2, main ="female cortex A_lcn2ko",
filename = "f_c_lcn2ko.png");
datain$gp120
atain$LCN2ko.gp120
datain$LCN2ko.gp120)
datain$LCN2ko.gp120
str(datain$gp120)
venn.diagram(list(B = as.character(arecirc_wt1), A = as.character(datain_mo_wt1$Label)),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,cat.fontface = 4,lty =2, main ="female cortex A_lcn2ko",
filename = "f_c_lcn2ko.png");
venn.diagram(list(B = datain$gp120, A = datain$LCN2ko.gp120),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,cat.fontface = 4,lty =2, main ="female cortex A_lcn2ko",
filename = "f_c_lcn2ko.png");
str(arecirc_wt1)
str(datain_mo_wt1$Label)
venn.diagram(list(B = (arecirc_wt1), A =(datain_mo_wt1$Label)),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,cat.fontface = 4,lty =2, main ="female cortex A_lcn2ko",
filename = "f_c_lcn2k22222o.png");
datain$LCN2ko.gp120
venn.diagram(list(B = (arecirc_wt1), A =(datain$LCN2ko.gp120)),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,cat.fontface = 4,lty =2, main ="female cortex A_lcn2ko",
filename = "f_c_lcn2k22222o.png");
venn.diagram(list(B = (arecirc_wt1), A =(datain_mo_wt1$X.1)),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,cat.fontface = 4,lty =2, main ="female cortex A_lcn2ko",
filename = "f_c_lcn2k22222o.png");
datain_mo_wt1$X.1
venn.diagram(list(B = (datain_mo_wt1$Label), A =(arecirc_wt1)),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,cat.fontface = 4,lty =2, main ="female cortex A_lcn2ko",
filename = "f_c_lcn2k22222o.png");
venn.diagram(list(B = (datain_mo_wt1$Label), A =(arecirc_wt1)),fill = c("red", "green"),
filename = "f_c_lcn2k22222o.png");
venn.diagram(list(B = (datain_mo_wt1$Label[1:50]), A =(arecirc_wt1[1:50])),fill = c("red", "green"),
filename = "f_c_lcn2k22222o.png");
venn.diagram(list(B = datain_mo_wt1$Label[1:50], A =arecirc_wt1[1:50]),fill = c("red", "green"),
filename = "f_c_lcn2k22222o.png")
datain$gp120
datain$LCN2ko.gp120)
datain$LCN2ko.gp120
B = datain$gp120
B
venn.diagram(list(B = arecirc_wt1[1:50], A =datain_mo_wt1$Label[1:50]),fill = c("red", "green"),
filename = "f_c_lcn2k22222o.png")
venn.diagram(list(B = arecirc_wt1, A =datain_mo_wt1$Label),fill = c("red", "green"),
filename = "f_c_lcn2k22222o.png")
arecirc_wt1
arecirc_wt1X <- datain_mo_wt1$X.1[datain_mo_wt1$AR <= 1.5 & datain_mo_wt1$Circ. >= 0.9]
venn.diagram(list(B = arecirc_wt1X, A =datain_mo_wt1$X.1),fill = c("red", "green"),
filename = "f_c_lcn2k22222o.png")
venn.diagram(list(B = arecirc_wt1X, A =datain_mo_wt1$X.1),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,cat.fontface = 4,lty =2, main ="True pos. WT",
filename = "TP_WT1.png")
arecirc_gp1X <- datain_mo_gp1$X.1[datain_mo_gp1$AR <= 1.5 & datain_mo_gp1$Circ. >= 0.9]
venn.diagram(list(B = arecirc_gp1X, A =datain_mo_gp1$X.1),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,cat.fontface = 4,lty =2, main ="True pos. WT",
filename = "TP_GP1.png")
venn.diagram(list(B = arecirc_gp1X, A =datain_mo_gp1$X.1),fill = c("red", "green"),
alpha = c(0.5, 0.5), cex = 2,cat.fontface = 4,lty =2, main ="True pos. GP",
filename = "TP_GP1.png")
geno_a <- scan(file="F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/Deepika_Neun/val_geno.txt", what='character')
geno_a1 <- paste0(geno_a, collapse = "")
geno_a2 <- strsplit(geno_a1, split = ",")
geno_a <- unlist(geno_a2)
lv_a <- levels(as.factor(lab))
cbind(lv_a, geno_a)
count_a <- NA
for (i in 1:length(lv_a)){
count_a[i]<- sum(lab == lv_a[i])
}
hand_final_a <- data.frame(cbind(lv_a, count_a))
hand_final_a$count_a <- as.numeric(hand_final_a$count_a)
geno_a
datainarea <- read.csv("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/Deepika_Neun/Results from val set area.csv")
lab <- trim_names(datainarea$Label, split = "crop" ,half = "front" )
trim_names <- function(file_names, split = " - ", half = "front"){
id1 <- file_names
sid1 <- strsplit(id1, split)
newsid1 <- NA
for (i in 1:length(sid1)){
if(half == "back") {newsid1 <- c(newsid1, tail(sid1[[i]],1))}
else if(half == "front") { newsid1 <- c(newsid1, head(sid1[[i]],1))}
else{print("half = front or back, please")
break}
}
newsid1 <- newsid1[-1]
}
lab <- trim_names(datainarea$Label, split = "crop" ,half = "front" )
lv_a <- levels(as.factor(lab))
count_a <- NA
for (i in 1:length(lv_a)){
count_a[i]<- sum(lab == lv_a[i])
}
hand_final_a <- data.frame(cbind(lv_a, count_a))
hand_final_a$count_a <- as.numeric(hand_final_a$count_a)
t.test(as.numeric(datainarea$Area) ~ as.character(geno_obj))
geno_obj <- NA
for (i in 1:length(lab)){
geno_obj[i] <- geno_a[grep(lab[i], lv_a)]
}
t.test(as.numeric(datainarea$Area) ~ as.character(geno_obj))
t.test(as.numeric(datainarea$Circ.) ~ as.character(geno_obj))
length(datainarea$AR[geno_obj == 'wt'])
sum(datainarea$AR[geno_obj == 'wt'] <= 1.5 & datainarea$Circ.[geno_obj == 'wt'] >= 0.8)
length(datainarea$AR[geno_obj == 'gp'])
sum(datainarea$AR[geno_obj == 'gp'] <= 1.5 & datainarea$Circ.[geno_obj == 'gp'] >= 0.8)
chisq.test(, x = c(22,99), y = c(5,70))
chisq.test( x = c(22,99), y = c(5,70))
chisq.test( x = c(88,22), y = c(70,5))
chisq.test( rbind( c(88,22),  c(70,5)))
sum(datainarea$AR[geno_obj == 'gp'] <= 1.5 & datainarea$Circ.[geno_obj == 'gp'] >= 0.8)/length(datainarea$AR[geno_obj == 'gp'])
sum(datainarea$AR[geno_obj == 'wt'] <= 1.5 & datainarea$Circ.[geno_obj == 'wt'] >= 0.8)/length(datainarea$AR[geno_obj == 'wt'])
datr <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7/Results IRF7 in cell no dapi excel working csv.csv")
datr <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7/Results IRF7 in cell no dapi excel working csv.csv")
boxplot(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond)
stripchart(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond)
stripchart(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond, vertical=TRUE,method="jitter")
boxplot(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond)
stripchart(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond, vertical=TRUE,method="jitter")
datr$Label
datr$Label[10]
datr$IRF7.avg.inside.cell.over.avg.outside[10]
dim(datr[,])
dim(datr[-10,])
datr <- datr[-10,]
boxplot(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond)
stripchart(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond, vertical=TRUE,method="jitter")
boxplot(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond)
stripchart(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond, vertical=TRUE,method="jitter", add=T)
stripchart(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
boxplot(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond)
stripchart(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
aov(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond)
summary(aov(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond))
datain2 <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7/Results IRF7 min non Tub working.csv)
datain2 <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7/Results IRF7 min non Tub working.csv")
head(datain2)
summary(aov(datain2$Mean ~ datr$cond))
length(datain2$Mean)
datcond <-  read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7/Results IRF7 in cell no dapi excel working csv.csv")
conds <- datcond$cond
summary(aov(datain2$Mean ~ conds))
box(datain2$Mean ~ conds)
box(datain2$Mean ~ as.factor(conds))
box(datain2$Mean ~ datcond$cond)
boxplot(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond)
stripchart(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
stripchart(datain2$Mean ~ datcond$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
stripchart(datain2$Mean ~ datcond$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
box(datain2$Mean ~ datcond$cond)
box(datain2$Mean , datcond$cond)
datain2$Mean
datcond$cond
box(datain2$Mean ~ as.factor(datcond$cond))
boxplot(datain2$Mean ~ as.factor(datcond$cond))
stripchart(datain2$Mean ~ datcond$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
summary(aov(datain2$Mean ~ conds))
test <- datain2$Mean*datain2$Area
test <- (datain2$Mean*datain2$Area)/datain2$X.Area
test
test <- (datain2$Mean*datain2$Area)(datain2$X.Area)
test <- (datain2$Mean*datain2$Area)*(datain2$X.Area)
test
datr <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7/Results IRF7 in cell no dapi excel working csv.csv")
boxplot(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond)
stripchart(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond, vertical=TRUE,method="jitter")
#removing the lowest ratio, it comes from insufficnet dapi segmentation
datr$Label[10]
datr$IRF7.avg.inside.cell.over.avg.outside[10]
dim(datr[,])
dim(datr[-10,])
datr <- datr[-10,]
boxplot(datr$IRF7.avg.inside.cell.over.avg.outside ~ datr$cond)
datr$cond
t.test(datr$IRF7.avg.inside.cell.over.avg.outside[datr$cond == "gpbal"] ~ datr$IRF7.avg.inside.cell.over.avg.outside[datr$cond == "gpbal_IFNB"])
t.test(datr$IRF7.avg.inside.cell.over.avg.outside[datr$cond == "gpbal"] , datr$IRF7.avg.inside.cell.over.avg.outside[datr$cond == "gpbal_IFNB"])
t.test(datr$IRF7.avg.inside.cell.over.avg.outside[datr$cond == "gpbal"] , datr$IRF7.avg.inside.cell.over.avg.outside[datr$cond == "IIIB"])
veh <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7 irf7/vehicle IRF7 min non dapi/Results min non dapi IRF7 vehicle working.csv)
vehic <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7 irf7/vehicle IRF7 min non dapi/Results min non dapi IRF7 vehicle working.csv")
vehic$ratio.avg.inside.over.avg.outside
conds
datain2 <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7/Results IRF7 min non Tub working.csv")
datcond <-  read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7/Results IRF7 in cell no dapi excel working csv.csv")
conds <- datcond$cond
head(datain2)
summary(aov(datain2$Mean ~ conds))
length(datain2$Mean)
datcond <-  read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7/Results IRF7 in cell no dapi excel working csv.csv")
head(datr)
vehic <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7 irf7/vehicle IRF7 min non dapi/Results min non dapi IRF7 vehicle working.csv")
vehic$cond
dim(datr[,])
datr <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7/Results IRF7 in cell no dapi excel working csv.csv")
dim(datr[,])
dim(datr[-10,])
datr <- datr[-10,]
datr2 <- rbind(datr$IRF7.avg.inside.cell.over.avg.outside, vehic$ratio.avg.inside.over.avg.outside)
datr2 <- cbind(datr$IRF7.avg.inside.cell.over.avg.outside, vehic$ratio.avg.inside.over.avg.outside)
datr2 <- c(datr$IRF7.avg.inside.cell.over.avg.outside, vehic$ratio.avg.inside.over.avg.outside)
datr2$ratio.avg.insdie.to.avg.outside <- c(datr$IRF7.avg.inside.cell.over.avg.outside, vehic$ratio.avg.inside.over.avg.outside)
datr2
datr2 <- na
datr2 <- NA
datr2$ratio.avg.insdie.to.avg.outside <- c(datr$IRF7.avg.inside.cell.over.avg.outside, vehic$ratio.avg.inside.over.avg.outside)
datr2
datr2$ratio.avg.insdie.to.avg.outside
datr2$cond <- c(datr$cond, vehic$cond)
datr2$cond
boxplot(datr2$ratio.avg.insdie.to.avg.outside ~ datr2$cond)
stripchart(datr2$ratio.avg.insdie.to.avg.outside ~ datr2$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
summary(aov(datr2$ratio.avg.insdie.to.avg.outside ~ datr2$cond))
a <- aov(datr2$ratio.avg.insdie.to.avg.outside ~ datr2$cond)
TukeyHSD(a)
datr2
datr2$ratio.avg.insdie.to.avg.outside
datr2$ratio.avg.insdie.to.avg.outside[32]
datr2$ratio.avg.insdie.to.avg.outside[-32]
datr2$cond[-32]
boxplot(datr2$ratio.avg.insdie.to.avg.outside ~ datr2$cond)
boxplot(datr2$ratio.avg.insdie.to.avg.outside ~ datr2$cond)
stripchart(datr2$ratio.avg.insdie.to.avg.outside ~ datr2$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
datr2$ratio.avg.insdie.to.avg.outside
ratio_i_to_o <- datr2$ratio.avg.insdie.to.avg.outside[-32]
conditions <- datr2$cond[-32]
boxplot(ratio_i_to_o ~ conditions)
stripchart(ratio_i_to_o ~ conditions, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
summary(aov(ratio_i_to_o ~ conditions))
a <- aov(ratio_i_to_o ~ conditions)
TukeyHSD(a)
veh_irf7_tub_only <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7 irf7/vehicle unprocessced IRF7 tub only/Results veh unprocess IRF7 tub only.csv")
datain2
datain2 <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7/Results IRF7 min non Tub working.csv")
vehic <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7 irf7/vehicle IRF7 min non dapi/Results min non dapi IRF7 vehicle working.csv")
datain2 <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7 irf7/Resultsnon norm tub area only.csv")
datcond <-  read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7 irf7/Results IRF7 in cell no dapi excel working csv.csv") ##this file isnt being found???
conds <- datcond$cond
head(datain2)
summary(aov(datain2$Mean ~ conds))
boxplot(datain2$Mean ~ as.factor(datcond$cond))
stripchart(datain2$Mean ~ datcond$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
non_norm_IRF7_tub_only_mean <- c(datain2$Mean, veh_irf7_tub_only$Mean)
length(non_norm_IRF7_tub_only_mean)
n
datcond <-  read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7 irf7/Results IRF7 in cell no dapi excel working csv.csv") ##this file isnt being found???
datcond
non_norm_cond <- c(datcond$cond, vehic$cond)
length(non_norm_cond)
length(non_norm_IRF7_tub_only_mean)
boxplot(non_norm_IRF7_tub_only_mean ~non_norm_cond)
stripchart(non_norm_IRF7_tub_only_mean ~non_norm_cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
summary(aov(non_norm_IRF7_tub_only_mean ~non_norm_cond))
id_for_in_dir <-"F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/tyler_test_area/Weka_Output_Thresholded/"
in_dir_list <- dir(id_for_in_dir)
in_dir_list <- dir(id_for_in_dir)
###all the file locations
id_for_in_dir <-"F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/tyler_test_area/Weka_Output_Thresholded/"
in_dir_list <- dir(id_for_in_dir)
file_list <- dir(paste(id_for_in_dir,"/", in_dir_list[1],"/", sep = ""))
id_for_out_dir <-"F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/tyler_test_area/Weka_Output_Projected//"
out_dir_list <- dir(id_for_out_dir)
id1 <- file_list
newsid1 <- trim_names(id1)
id1
trim_names <- function(file_names, split = " - ", half = "front"){
id1 <- file_names
sid1 <- strsplit(id1, split)
newsid1 <- NA
for (i in 1:length(sid1)){
if(half == "front") {newsid1 <- c(newsid1, tail(sid1[[i]],1))}
else if(half == "back") { newsid1 <- c(newsid1, head(sid1[[i]],1))}
else{print("half = front or back, please")
break}
}
newsid1 <- newsid1[-1]
}
sep_slidebook <- function(x, sep = "-"){
newsid1 <- x
newsid1_s <- strsplit(newsid1, sep)
#look at what elements you are working with
head(newsid1_s,3)
max_l <- length(newsid1_s[[1]])
##parseit takes a list of seperated relevent name elements from every image
parseit <-function(x,object_num){
newsid1_anum <- NA
for (i in 1:length(x)){
newsid1_anum <- c(newsid1_anum, x[[i]][object_num])
}
newsid1_anum <- newsid1_anum[-1]
}
###these are what you need to adjust for different names of images!!!!####
newsid1_anum <- parseit(x = newsid1_s, object_num = 2)
newsid1_snum <- parseit(x = newsid1_s, object_num = 3)
newsid1_fnum <- parseit(x = newsid1_s, object_num = max_l)
fnumsid1_s <- strsplit(newsid1_fnum, "") #### sometimes another seperation step is required
newsid1_fnum1 <- parseit(x = fnumsid1_s, object_num = 1)
newsid1_fnum2 <- parseit(x = fnumsid1_s, object_num = 2)
newsid1_fnum3 <- paste(newsid1_fnum1,newsid1_fnum2, sep = "") # for clarity, seperated objects can be recombined in order with paste()
####making the data frames-----------
id1_df <- cbind(newsid1_anum, newsid1_snum, newsid1_fnum3)
head(id1_df)
#return(id1_df_squish)
return(id1_df)
}
squish <- function(input_df){
id1_df_squish <- NA
for (i in 1:dim(input_df)[1]) {
id1_df_squish[i] <- paste0(input_df[i,], sep = "_", collapse = "")
}
return(id1_df_squish)
}##simple function to combine rows of the df with info
newsid1
id1 <- file_list
newsid1 <- trim_names(id1)
newsid1
id1
id1_df_sep <- sep_slidebook(x = newsid1, sep = c("-"))
id1_df_sep
big_df <- cbind(newsid1, id1_df_squish,id1_df_sep) ##specify: original file names, info columns, squished ID
colnames(big_df) <- c("file_name", "img_ID", "a_num","S_num", "F_num")
id1_df_squish <- squish(input_df = id1_df_sep)
id1_df_squish
big_df <- cbind(newsid1, id1_df_squish,id1_df_sep) ##specify: original file names, info columns, squished ID
colnames(big_df) <- c("file_name", "img_ID", "a_num","S_num", "F_num")
big_df <- data.frame(big_df) #this df gives us access to varibles based on the images in several forms
length(file_list)
u_img <- unique(big_df$img_ID)
length(u_img)
dim(big_df)
in_dir_list
out_dir_list
id_for_out_dir <-"F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/tyler_test_area/Weka_Output_Projected/"
out_dir_list <- dir(id_for_out_dir)
out_dir_list
for (i in 1: length(u_img)){
all_current_ID <- grep(u_img[i],big_df$img_ID)
this_group <- img_file_names[all_current_ID]
# Sum projected as equal to the number of layers in the image
projected = 0
max_len = length(this_group)
for (j in 1:max_len) {
projected = projected + readImage(as.character(this_group[j]))
}
projected[projected >255] = 255
# ##it turns out names get very long when working with image processing steps and you cant save a file with more than 97 charcters in the name
# fn = this_group[1]
# if (length(unlist(strsplit(this_group[1], split = ""))) >= 93){
#   fn <- paste(unlist(strsplit(this_group[1], split = ""))[1:93], sep = "", collapse = "")
#
#   #cant have 2 . in a row before png
#   if (tail(unlist(strsplit(fn,split = "")),1) == "."){
#     fn <- paste(unlist(strsplit(fn,split = ""))[1:length(unlist(strsplit(fn,split = ""))) - 1], sep = "", collapse = "")
#   }
# }
#
file_out_loc <- paste(paste(id_for_out_dir,out_dir_list[j], sep = ""),"/",this_group[1], sep = "")
writeImage(projected,file_out_loc)
# }else (print("we have a problem, ", as.character(this_group[1])," had neither 2 nor 3 images"))
#
}
length(in_dir_list)
j = 1
setwd(paste(id_for_in_dir,"/",in_dir_list[j], sep = ""))
getwd()
img_file_names <- list.files()
img_file_names
out_loc <- out_dir_list[j]
out_loc
length(u_img)
i = 1
all_current_ID <- grep(u_img[i],big_df$img_ID)
all_current_ID
this_group <- img_file_names[all_current_ID]
projected = 0
max_len = length(this_group)
max_len
projected = 0
max_len = length(this_group)
for (k in 1:max_len) {
projected = projected + readImage(as.character(this_group[k]))
}
#BiocManager::install("EBImage")
library("EBImage")
#install.packages("OpenImageR") ##dotn know if one or both is neccesary yet
library("OpenImageR")
for (k in 1:max_len) {
projected = projected + readImage(as.character(this_group[k]))
}
head(projected)
for (j in 1:length(in_dir_list)){
#setwd(paste(id_for_dir,"/",nm,j, sep = ""))
setwd(paste(id_for_in_dir,"/",in_dir_list[j], sep = ""))
getwd()
img_file_names <- list.files()
out_loc <- out_dir_list[j]
for (i in 1: length(u_img)){
##identify images belonging to each unique image ID
all_current_ID <- grep(u_img[i],big_df$img_ID)
this_group <- img_file_names[all_current_ID]
# Sum projected as equal to the number of layers in the image
projected = 0
max_len = length(this_group)
for (k in 1:max_len) {
projected = projected + readImage(as.character(this_group[k]))
}
projected[projected >255] = 255
# ##it turns out names get very long when working with image processing steps and you cant save a file with more than 97 charcters in the name
# fn = this_group[1]
# if (length(unlist(strsplit(this_group[1], split = ""))) >= 93){
#   fn <- paste(unlist(strsplit(this_group[1], split = ""))[1:93], sep = "", collapse = "")
#
#   #cant have 2 . in a row before png
#   if (tail(unlist(strsplit(fn,split = "")),1) == "."){
#     fn <- paste(unlist(strsplit(fn,split = ""))[1:length(unlist(strsplit(fn,split = ""))) - 1], sep = "", collapse = "")
#   }
# }
#
file_out_loc <- paste(paste(id_for_out_dir,out_dir_list[j], sep = ""),"/",this_group[1], sep = "")
writeImage(projected,file_out_loc)
# }else (print("we have a problem, ", as.character(this_group[1])," had neither 2 nor 3 images"))
#
}
}
dat_irf8 <- read.csv("F:/primary microglia Jeff images/6-19-2021 - pHMC Staining plate 7 IRF8/IRF8_dapi_overlap_analysis.csv")
boxplot(dat_irf8$inside_over_outside~ dat_irf8$cond)
stripchart(dat_irf8$inside_over_outside~ dat_irf8$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
summary(aov(dat_irf8$inside_over_outside~ dat_irf8$cond))
a <- aov(dat_irf8$inside_over_outside~ dat_irf8$cond)
TukeyHSD(a)
datr <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7 irf7/IRF7 inside vs outside dapi calc.csv")
datr <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7 irf7/IRF7 inside vs outside dapi calc.csv")
boxplot(datr$ratio_inside_mean_over_outside_mean ~ datr$cond)
stripchart(datr$ratio_inside_mean_over_outside_mean ~ datr$cond)
stripchart(datr$ratio_inside_mean_over_outside_mean ~ datr$cond, vertical=TRUE,method="jitter")
boxplot(datr$ratio_inside_mean_over_outside_mean ~ datr$cond)
stripchart(datr$ratio_inside_mean_over_outside_mean ~ datr$cond, vertical=TRUE,method="jitter")
boxplot(datr$ratio_inside_mean_over_outside_mean ~ datr$cond)
stripchart(datr$ratio_inside_mean_over_outside_mean ~ datr$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
datr$Label[10]
datr$ratio_inside_mean_over_outside_mean[10]
datr
dim(datr[,])
dim(datr[-10,])
datr <- datr[-10,]
dim(datr[,])
boxplot(datr$ratio_inside_mean_over_outside_mean ~ datr$cond)
stripchart(datr$ratio_inside_mean_over_outside_mean ~ datr$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
summary(aov(datr$ratio_inside_mean_over_outside_mean ~ datr$cond))
t.test(datr$ratio_inside_mean_over_outside_mean[datr$cond == "gpbal"] , datr$ratio_inside_mean_over_outside_mean[datr$cond == "gpbal_IFNB"])
t.test(datr$ratio_inside_mean_over_outside_mean[datr$cond == "vehicle"] , datr$ratio_inside_mean_over_outside_mean[datr$cond == "gpbal_IFNB"])
t.test(datr$ratio_inside_mean_over_outside_mean[datr$cond == "Vehicle"] , datr$ratio_inside_mean_over_outside_mean[datr$cond == "gpbal_IFNB"])
t.test(datr$ratio_inside_mean_over_outside_mean[datr$cond == "Vehicle"] , datr$ratio_inside_mean_over_outside_mean[datr$cond == "gpbal"])
t.test(datr$ratio_inside_mean_over_outside_mean[datr$cond == "IIIB"] , datr$ratio_inside_mean_over_outside_mean[datr$cond == "IIIB_IFNB"])
t.test(datr$ratio_inside_mean_over_outside_mean[datr$cond == "IFNB"] , datr$ratio_inside_mean_over_outside_mean[datr$cond == "gpbal"])
a <- aov(datr$ratio_inside_mean_over_outside_mean ~ datr$cond)
TukeyHSD(a)
t.test(datr$ratio_inside_mean_over_outside_mean[datr$cond == "gpbal"] , datr$ratio_inside_mean_over_outside_mean[datr$cond == "gpbal_IFNB"])
datnn <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7 irf7/Results non norm cell only.csv")
summary(aov(datnn$Mean ~ datr$cond))
datnn$Mean
length(datnn$Mean)
datcond <- read.csv("F:/primary microglia Jeff images/pHMC Staining plate 7 irf7/IRF7 inside vs outside dapi calc.csv")
summary(aov(datnn$Mean ~ datcond$cond))
boxplot(datnn$Mean ~ datcond$cond)
stripchart(datnn$Mean ~ datcond$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
summary(aov(datnn$Mean ~ datcond$cond))
a <- aov(datnn$Mean ~ datcond$cond)
TukeyHSD(a)
dateph <- read.csv("F:/primary microglia Jeff images/6-19-2021 - pHMC Staining plate 7 Ephrin-b1/Results eph ratio calc.csv")
boxplot(dateph$mean.ratio.inside.over.outside ~ dateph$cond)
stripchart(dateph$mean.ratio.inside.over.outside ~ dateph$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
summary(aov(dateph$mean.ratio.inside.over.outside ~ dateph$cond))
stripchart(dateph$mode.ratio.inside.over.outside ~ dateph$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
stripchart(dateph$mode.ratio.inside.outsided ~ dateph$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
boxplot(dateph$mode.ratio.inside.outsided ~ dateph$cond)
stripchart(dateph$mode.ratio.inside.outsided ~ dateph$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
summary(aov(dateph$mode.ratio.inside.outsided ~ dateph$cond))
a <- aov(dateph$mode.ratio.inside.outsided ~ dateph$cond)
TukeyHSD(a)
datueph_tot <- read.csv("F:/primary microglia Jeff images/6-19-2021 - pHMC Staining plate 7 Ephrin-b1/Results eph unprocessed.csv")
datueph_tot <- read.csv("F:/primary microglia Jeff images/6-19-2021 - pHMC Staining plate 7 Ephrin-b1/Results eph unprocessed.csv")
boxplot(datueph_tot$Mean ~ dateph$cond)
stripchart(datueph_tot$Mean ~ dateph$cond, vertical=TRUE,method="jitter", add=T, col = 2, pch = 19)
summary(aov(datueph_tot$Mean ~ dateph$cond))
