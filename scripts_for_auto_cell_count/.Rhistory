bipolar_1_M_300 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/bipolar_1_M_300.Rds")
bipolar_2_M_300 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/bipolar_2_M_300.Rds")
bipolar_3_M_300 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/bipolar_3_M_300.Rds")
bipolar_4_M_300 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/bipolar_4_M_300.Rds")
bipolar_6_M_300 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/bipolar_6_M_300.Rds")
bipolar_7_M_300 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/bipolar_7_M_300.Rds")
bipolar_8_M_300 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/bipolar_8_M_300.Rds")
View(bipolar_1_M_300)
View(bipolar_3_M_300)
bipolar_9_M_300 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/bipolar_9_M_300.Rds")
SCZ_20_M_300 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/SCZ_results/SCZ_20_M_300.Rds")
View(SCZ_20_M_300)
SCZ_19_M_300 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/SCZ_results/SCZ_19_M_300.Rds")
SCZ_13_M_300 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/SCZ_results/SCZ_13_M_300.Rds")
SCZ_10_M_300 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/SCZ_results/SCZ_10_M_300.Rds")
bipolar_1_M_10 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/bipolar_1_M_10.Rds")
View(bipolar_1_M_10)
bipolar_2_M_10 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/bipolar_2_M_10.Rds")
bipolar_4_M_10 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/bipolar_4_M_10.Rds")
bipolar_3_M_10 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/bipolar_3_M_10.Rds")
bipolar_19_M_10 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/bipolar_19_M_10.Rds")
View(bipolar_19_M_10)
View(bipolar_19_M_10)
bipolar_16_M_10 <- readRDS("~/Chi_Hua_Lab/ClzTOP/results/bipolar_16_M_10.Rds")
load("~/Chi_Hua_Lab/ClzTOP/ClzTOP_analysis/ClzTOP-dataClz.Rdata")
### locate R library
path = "C:/Users/19099/Documents/R/my_R_library"  # UPDATE to your file path
.libPaths(path)
trainList <- list()
testList <- list()
### Figure out your wd to edit the below lines
getwd()
WDir = "C:/Users/19099/Documents/Chi_Hua_Lab/"     # UPDATE to your file path
setwd(WDir)
DDir = "C:/Users/19099/Documents/Chi_Hua_Lab/ClzTOP/"     # UPDATE to your file path
SCIZOPHRENIA = "schizophrenia"
BIPOLAR = "bipolar"
OTHER_P = "other psychosis"
### Load TOP and Clz data files
cat(paste0(format(Sys.time(),"%H:%M:%S")))
dataTOP = readRDS(paste0(DDir,'ClzTOP_analysis/ClzTOP-dataTOP.Rdata'))
dataClz = readRDS(paste0(DDir,'ClzTOP_analysis/ClzTOP-dataClz.Rdata'))
cat(paste0(format(Sys.time(),"%H:%M:%S")))
### Load subjects metadata file
aux = read.table(paste0(DDir,'Data/TOP-subs-metadata.csv'), header = T, sep='\t', na.strings = 'NA' )
# Choose only Bipolar subjects, make this not hard coded in the future
aux.do = c( which( aux$Diag_category == "bipolar I"), which( aux$Diag_category == "bipolar II"), which(aux$Diag_category == "bipolarNOS"))
category_do = BIPOLAR
sub.do = as.vector( aux[ aux.do, 1] )
aux = match( sub.do, dataTOP$FID )
dataTOP = dataTOP[ aux[!is.na(aux)], ]       # Remove all null values from dataTOP
cat(paste0(format(Sys.time(),"%H:%M:%S")))
#######  Split the data into training and testing for several random divisions
n=20   # specify the number of random divisions (use n=20 after debugging) (Should use n = 2 for debugging in my opinion, see if enviornment preserved between iterations)
for(i in 1:n)
View(dataTOP)
View(dataClz)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# The following initializes usage of Bioc devel
BiocManager::install(version='devel')
BiocManager::install("SNPRelate")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# The following initializes usage of Bioc devel
BiocManager::install(version='devel')
BiocManager::install("SNPRelate")
WDir = "C:/Users/19099/Documents/Chi_Hua_Lab/plink-1.07-dos"     # UPDATE to your file path
setwd(WDir)
DDir = WDir
snpgdsBED2GDS(bed.fn = "ALL_TOP_samples.bed",
bim.fn = "ALL_TOP_samples.bim",
fam.fn = "ALL_TOP_samples.fam",
out.gdsfn = "ALL_TOP.gds")
version
R --version
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::available()
install.packages("BiocManager")
### locate R library
path = "C:/Users/19099/Documents/R/my_R_library"  # UPDATE to your file path
.libPaths(path)
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install(version = "3.12")
install.packages("BiocManager")
install.packages("BiocManager")
snpgdsBED2GDS(bed.fn = "ALL_TOP_samples.bed",
bim.fn = "ALL_TOP_samples.bim",
fam.fn = "ALL_TOP_samples.fam",
out.gdsfn = "ALL_TOP.gds")
snpgdsBED2GDS(bed.fn = "ALL_TOP_samples.bed",
bim.fn = "ALL_TOP_samples.bim",
fam.fn = "ALL_TOP_samples.fam",
out.gdsfn = "ALL_TOP.gds")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# The following initializes usage of Bioc devel
BiocManager::install(version='devel')
BiocManager::install("SNPRelate")
ls
snpgdsBED2GDS(bed.fn = "ALL_TOP_samples.bed",
bim.fn = "ALL_TOP_samples.bim",
fam.fn = "ALL_TOP_samples.fam",
out.gdsfn = "ALL_TOP.gds")
BiocManager::install("SNPRelate")
BiocManager::install()
BiocManager::install()
install.packages("BiocManager")
R
BiocManager
BiocManager::available()
library(BiocManager)
library(Rserve)
Rserve()
library(BiocManager)
WDir = "C:/Users/19099/Documents/R/win-library/4.0"
setwd(WDir)
library(BiocManager)
pwd
path
WDir = "C:/Users/19099/Documents/R/win-library/4.0"
setwd(WDir)
library(BiocManager)
path
WDir = "C:/Users/19099/Documents/"
setwd(WDir)
library(BiocManager)
path
snpgdsBED2GDS(bed.fn = "ALL_TOP_samples.bed",
bim.fn = "ALL_TOP_samples.bim",
fam.fn = "ALL_TOP_samples.fam",
out.gdsfn = "ALL_TOP.gds")
BiocManager::available()
BiocManager::available()
BiocManager::install("SNPRelate")
snpgdsBED2GDS(bed.fn = "ALL_TOP_samples.bed",
bim.fn = "ALL_TOP_samples.bim",
fam.fn = "ALL_TOP_samples.fam",
out.gdsfn = "ALL_TOP_samples.gds")
snpgdsBED2GDS(bed.fn = "ALL_TOP_samples.bed",
bim.fn = "ALL_TOP_samples.bim",
fam.fn = "ALL_TOP_samples.fam",
out.gdsfn = "ALL_TOP_samples.gds")
snpds
browseVignettes("SNPRelate")
WDir = "C:/Users/19099/Documents/Chi_Hua_Lab/plink-1.07-dos"     # UPDATE to your file path
library(SNPRelate)
library(SNPRelate)
load("~/Chi_Hua_Lab/ALL_TOP_GENODATA.Rdata")
load("~/Chi_Hua_Lab/plink-1.07-dos/gds_workspace_with_CLZ_data.RData")
1+2
2+2
source('~/.active-rstudio-document')
v = c(0, first, pi)
v
class(v)
pres = c("George", "Washington")
class(pres)
m = matrix(c(1,2,3,4,5,6), nrow=2, ncol=3)
m
colName = c(1,2,3)
v = c(TRUE,FALSE,TRUE)
age = c(10,20,30)
disney = data.frame(colName, v, age)
View(disney)
rowName = c(15,21,32)
v = c(TRUE,FALSE,TRUE)
age = c(10,20,30)
disney = data.frame(rowName, v, age)
fib = c(1,1,2,3,5,8,13,21,34,55)
fib
fib = c(0,1,1,2,3,5,8,13,21,34)
fib
library(EnhancedVolcano)
library(readxl)
RNAseq_of_whole_blood_in_MS_patients <- read_excel("Kaul_Lab/INFB_Project/RNAseq of whole blood in MS patients.xlsx")
View(RNAseq_of_whole_blood_in_MS_patients)
library(readxl)
RNAseq_PBMC_in_IFNB_treated_MS_Patients <- read_excel("Kaul_Lab/INFB_Project/RNAseq PBMC in IFNB treated MS Patients.xlsx")
View(RNAseq_PBMC_in_IFNB_treated_MS_Patients)
install.packages("https://cran.r-project.org/src/contrib/rlang_0.4.10.tar.gz", repos = NULL, type="source")
library(readr)
Ephrin_Genes <- read_csv("Kaul_Lab/INFB_Project/Ephrin_Genes.csv")
View(Ephrin_Genes)
source('~/Kaul_Lab/AutoCellCount/Automatic-Cell-counting-with-TWS/scripts_for_auto_cell_count/classifier_comparison.R')
getwd()
setwd(C:\Users\19099\Documents\Kaul_Lab\AutoCellCount\Automatic-Cell-counting-with-TWS\scripts_for_auto_cell_count)
setwd("C:/Users/19099/Documents/Kaul_Lab/AutoCellCount/Automatic-Cell-counting-with-TWS/scripts_for_auto_cell_count"")
)
""
setwd("C:/Users/19099/Documents/Kaul_Lab/AutoCellCount/Automatic-Cell-counting-with-TWS/scripts_for_auto_cell_count")
source('~/Kaul_Lab/AutoCellCount/Automatic-Cell-counting-with-TWS/scripts_for_auto_cell_count/classifier_comparison.R')
F1_2
final_blah
geno
geno[,1]
final_blah$geno
p_g_tt
t.test
F1_g_tt
F1_2
F1_g_tt
estimate
F1_g_tt$estimate
source('~/Kaul_Lab/AutoCellCount/Automatic-Cell-counting-with-TWS/scripts_for_auto_cell_count/Project N images by ID.R')
source('~/Kaul_Lab/AutoCellCount/Automatic-Cell-counting-with-TWS/scripts_for_auto_cell_count/Project N images by ID.R')
F1_g_tt$estimate[1]
F1_g_tt$estimate
F1_g_tt
final_blah$F1_2
mean(final_blah$F1_2)
final_blah
F1_g_tt
