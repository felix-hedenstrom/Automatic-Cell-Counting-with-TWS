m_imgs_wt_gp
dim(m_imgs_wt_gp)
length(idme_df_squish)
both_counted <- get_match_id(idme_df_squish,m_imgs_wt_gp$img_ID)
both_counted
missing_counts <- m_imgs_wt_gp[-both_counted]
missing_counts <- m_imgs_wt_gp[-both_counted,]
missing_counts
fname <- "F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_roi_after_Npt3_7_16_2021.csv"
big_r <- read.csv(fname)
head(big_r)
lv <- levels(as.factor(big_r$Label))
count <- NA
for (i in 1:length(lv)){
count[i]<- sum(big_r$Label == lv[i])
}
final <- data.frame(cbind(lv, count))
final$count <- as.numeric(final$count)
str(final$count)
final
str(final$count)
write.csv(final, "F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_roi_after_Npt3_counted.csv")
df <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_roi_after_Npt3_counted.csv")
df2 <- df[df$geno == "wt" | df$geno == "gp",]
df2$count <- as.numeric(df2$count)
dim(df2)
fname <- "F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_test.csv"
big_r <- read.csv(fname)
head(big_r)
lv <- levels(as.factor(big_r$Label))
count <- NA
for (i in 1:length(lv)){
count[i]<- sum(big_r$Label == lv[i])
}
final <- data.frame(cbind(lv, count))
final$count <- as.numeric(final$count)
str(final$count)
final
####looking at the numbers by genoype/sex(need to assign geno in excel currently)###
df <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_roi_after_Npt3_counted.csv")
df2 <- df[df$geno == "wt" | df$geno == "gp",]
df2$count <- as.numeric(df2$count)
dim(df2)
df2
dim(df2)
t.test(df2$count ~ df2$geno)
dim(df2[df2$geno == "wt"])
dim(df2[df2$geno == "wt",])
boxplot(df2$count ~ df2$geno)
stripchart(df2$count ~ df2$geno, vertical = TRUE,
method = "jitter", add = TRUE, pch = 20, col = 'blue')
fname <- "F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_cropped_Hina_count_all_geno_male.csv"
big_r <- read.csv(fname)
head(big_r)
lv <- levels(as.factor(big_r$Label))
count <- NA
for (i in 1:length(lv)){
count[i]<- sum(big_r$Label == lv[i])
}
final <- data.frame(cbind(lv, count))
final$count <- as.numeric(final$count)
str(final$count)
write.csv(final, "F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_cropped_Hina_count_all_geno_male_counted.csv")
dfh <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_cropped_Hina_count_all_geno_male_counted.csv")
dfh2 <- df[dfh$geno == "wt" | dfh$geno == "gp",]
dim(dfh2)
t.test(dfh2$count ~ dfh2$geno)
corr_two_hand_counts <- lm(df2$count ~ dfh2$count)
summary(corr_two_hand_counts)
method = "jitter", add = TRUE, pch = 20, col = 'blue')
##enterin hina data
dfh <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_cropped_Hina_count_all_geno_male_counted.csv")
dfh2 <- df[dfh$geno == "wt" | dfh$geno == "gp",]
dim(dfh2)
t.test(dfh2$count ~ dfh2$geno)
##enterin hina data
dfh <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_cropped_Hina_count_all_geno_male_counted.csv")
dfh2 <- df[dfh$geno == "wt" | dfh$geno == "gp",]
dim(dfh2)
t.test(dfh2$count ~ dfh2$geno)
dfh <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_cropped_Hina_count_all_geno_male_counted.csv")
dfh2 <- dfh[dfh$geno == "wt" | dfh$geno == "gp",]
dim(dfh2)
t.test(dfh2$count ~ dfh2$geno)
corr_two_hand_counts <- lm(df2$count ~ dfh2$count)
####looking at the numbers by genoype/sex(need to assign geno in excel currently)###
df <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/Results_roi_after_Npt3_counted.csv")
df2 <- df[df$geno == "wt" | df$geno == "gp",]
df2$count <- as.numeric(df2$count)
dim(df2)
t.test(df2$count ~ df2$geno)
t.test(dfh2$count ~ dfh2$geno)
df2
dfh2
rbind(df2$lv,dfh2$lv)
rbind(df2$lv,dfh2$lv)
corr_two_hand_counts <- lm(df2$count ~ dfh2$count)
summary(corr_two_hand_counts)
corr_two_hand_counts <- lm(df2$count ~ dfh2$count)
summary(corr_two_hand_counts)
corr_two_hand_counts_gp <- lm(df2$count[df2$geno == "gp"] ~ dfh2$count[dfh2$geno == "gp"])
summary(corr_two_hand_counts_gp)
corr_two_hand_counts_wt <- lm(df2$count[df2$geno == "wt"] ~ dfh2$count[dfh2$geno == "wt"])
summary(corr_two_hand_counts_wt)
boxplot(dfh2$count ~ dfh2$geno)
dfh2
stripchart(dfg2$count ~ dfg2$geno, vertical = TRUE,
method = "jitter", add = TRUE, pch = 20, col = 'blue')
stripchart(dfh2$count ~ dfh2$geno, vertical = TRUE,
method = "jitter", add = TRUE, pch = 20, col = 'blue')
finaldf
sample(1:25,4)
sample(1:27,4)
datain_test <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/superdf_run1_area_adj_with_diff.csv")
datain_test <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/superdf_run1_area_adj_with_diff.csv")
datain_test$val
t.test(datain_test$count_Hina_hand[datain_test$geno == "wt" | datain_test$val == "v"] ~ datain_test$count_Hina_hand[datain_test$geno == "gp" | datain_test$val == "v"])
datain_test$count_Hina_hand[datain_test$geno == "gp" & datain_test$val == "v"]
t.test(datain_test$count_Hina_hand[datain_test$geno == "wt" & datain_test$val == "v"] ~ datain_test$count_Hina_hand[datain_test$geno == "gp" & datain_test$val == "v"])
(datain_test$count_Hina_hand[datain_test$geno == "wt" & datain_test$val == "v"]
)
t.test(datain_test$count_Hina_hand[datain_test$geno == "wt" & datain_test$val == "v"] , datain_test$count_Hina_hand[datain_test$geno == "gp" & datain_test$val == "v"])
trim_names <- function(file_names, split = " - ", half = "front"){
id1 <- file_names
sid1 <- strsplit(id1, split)
newsid1 <- NA
for (i in 1:length(sid1)){
if(half == "front") {newsid1 <- c(newsid1, tail(sid1[[i]],1))}
else if(half == "back") { newsid1 <- c(newsid1, head(sid1[[i]],1))}
else{print("half = front or back, please")
break}
}
newsid1 <- newsid1[-1]
}
sep_slidebook <- function(x, sep = "-"){
newsid1 <- x
newsid1_s <- strsplit(newsid1, sep)
#look at what elements you are working with
head(newsid1_s,3)
max_l <- length(newsid1_s[[1]])
##parseit takes a list of seperated relevent name elements from every image
parseit <-function(x,object_num){
newsid1_anum <- NA
for (i in 1:length(x)){
newsid1_anum <- c(newsid1_anum, x[[i]][object_num])
}
newsid1_anum <- newsid1_anum[-1]
}
###these are what you need to adjust for different names of images!!!!####
newsid1_anum <- parseit(x = newsid1_s, object_num = 2)
newsid1_snum <- parseit(x = newsid1_s, object_num = 3)
newsid1_fnum <- parseit(x = newsid1_s, object_num = max_l)
fnumsid1_s <- strsplit(newsid1_fnum, "") #### sometimes another seperation step is required
newsid1_fnum1 <- parseit(x = fnumsid1_s, object_num = 1)
newsid1_fnum2 <- parseit(x = fnumsid1_s, object_num = 2)
newsid1_fnum3 <- paste(newsid1_fnum1,newsid1_fnum2, sep = "") # for clarity, seperated objects can be recombined in order with paste()
####making the data frames-----------
id1_df <- cbind(newsid1_anum, newsid1_snum, newsid1_fnum3)
head(id1_df)
#return(id1_df_squish)
return(id1_df)
}
squish <- function(input_df){
id1_df_squish <- NA
for (i in 1:dim(input_df)[1]) {
id1_df_squish[i] <- paste0(input_df[i,], sep = "_", collapse = "")
}
return(id1_df_squish)
}##simple function to combine rows of the df with info
get_match_id <- function(sub_inv,full_inv){
match_id <- NA
for (i in 1: length(sub_inv) ){
pineapple <- grep(sub_inv[i],full_inv)
if (sum(pineapple) == 0) {print("not found")} else match_id[i] <- pineapple
}
match_id <- match_id[complete.cases(match_id)]
}
datain_full <- dir("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/Data/Full_dataset/Processed_Images/")
datain_full <- dir("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/Data/Full_dataset/Processed_Images/")
head(datain_full)
full_trim <- trim_names(datain_full)
head(full_trim)
full_sep <- sep_slidebook(full_trim)
head(full_sep)
full_squish <- squish(full_sep)
datain_val <- dir("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/Data/Corrected_files/Validation_data/")
val_trim <- trim_names(datain_val)
val_sep <- sep_slidebook(val_trim)
get_match_id(val_squish, full_squish)
val_squish <- squish(val)
val_squish <- squish(val_sep)
get_match_id(val_squish, full_squish)
mch <- get_match_id(val_squish, full_squish)
mch
length(mch)
mch2 <- get_match_id(full_squish, val_squish)
mch2
mch <- get_match_id(val_squish, full_squish)
mch
length(unique(mch))
x = datain_full[3]
x
newsid1_s <- strsplit(newsid1, sep)
newsid1 <- x
data <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/new_val_train_etc/new_new_train/counted/masks_class19/class19_Final.csv")
data
data <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/new_val_train_etc/new_new_train/counted/masks_class19/class19_Final.csv")
dat <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/new_val_train_etc/new_new_train/counted/masks_class19/class19_Final.csv")
DC <- (2(dat$tp))/(2(dat$tp)+ dat$fn + dat$fp)
DC <- (2*(dat$tp))/(2*(dat$tp)+ dat$fn + dat$fp)
DC
mean(DC)
hand_ini <- read.csv("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/Data/Full_dataset/Results_hand_roi_full_dataset_no_val_8_30_2021.csv")
##processing hand count roi to get count per image
lv_h <- levels(as.factor(hand_ini$Label))
count_h <- NA
for (i in 1:length(lv_h)){
count_h[i]<- sum(hand_ini$Label == lv_h[i])
}
hand_final <- data.frame(cbind(lv_h, count_h))
hand_final$count_h <- as.numeric(hand_final$count_h)
counted_folder_dir <-"F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/Data/Full_dataset/counted_no_min_size/"
setwd(counted_folder_dir)
class_list <- list.files()
class_list <- list.files()
class_list
class_loc <- paste(counted_folder_dir,class_list[f],"/Results.csv",sep = "")
class_results <- read.csv(class_loc)
class_loc <- paste(counted_folder_dir,class_list,"/Results.csv",sep = "")
class_results <- read.csv(class_loc)
img_names <- levels(as.factor(class_results$Label))
img_names
final_blah <- data.frame(name = NA, tp = NA, fp = NA, fn= NA)
for (i in 1:length(img_names)) {
current_img <- img_names[i]
dftc<- NA
dftc <- class_results[class_results$Label == current_img,]  ###pulls out just the rows in results with the image name of the current image
fp = 0
tp = 0
fn = 0
#i = 5
for (j in 1:length(dftc$points)) {
if (dftc$points[j] == 0){fp = fp +1} #auto count objects with no hand markers
else if (dftc$points[j] == 1){tp = tp +1} #auto count objects with exactly 1 marker
else {
tp = tp+1 #adds one tp and requisite number of fn for objects with multiple markers
fn = fn + dftc$points[j] - 1
}
}
#for each image add total number hand count - sum(dftc$points), the sum points must always be less than hand_final$count
## dtfc$points only counts the markers that fall within cell objects, hand_final$counts is the sum of all points in total.
#when this is not true(eg there are negative values) check the image names of the hand count!!
missed <- as.numeric(hand_final$count_h[i]) - sum(dftc$points)
fn <- fn + missed
name <- img_names[i]
this_row <- cbind(name, tp, fp, fn)
final_blah <-rbind(final_blah, this_row)
}
final_blah <- final_blah[-1,]
final_blah$tp <- as.numeric(final_blah$tp)
final_blah$fp <- as.numeric(final_blah$fp)
final_blah$fn <- as.numeric(final_blah$fn)
tot_tp <- sum(as.numeric(final_blah$tp))
tot_fp <- sum(as.numeric(final_blah$fp))
tot_fn <- sum(as.numeric(final_blah$fn))
prec <- tot_tp/(tot_tp + tot_fp)
reca <- tot_tp/(tot_tp + tot_fn)
F1 <- 2*(prec*reca/(prec + reca))
prec <- round(prec, 4)
reca <- round(reca, 4)
F1 <- round(F1, 4)
print(paste(class," precision = ", prec ))
print(paste(class," recall = ", reca ))
print(paste(class," F1 = ", F1 ))
F1
reca
prec
paste(class," precision = ", prec )
print(paste(" precision = ", prec ))
class
class <- class_list
print(paste(class," precision = ", prec ))
print(paste(class," recall = ", reca ))
print(paste(class," F1 = ", F1 ))
current_loc <- paste(counted_folder_dir,class_list[f],sep = "")
file_out_name <- paste(current_loc,"/",class,"_Final.csv",sep = "")
write.csv(final_blah, file_out_name )
current_loc <- paste(counted_folder_dir,class,sep = "")
current_loc
file_out_name <- paste(current_loc,"/",class,"_Final.csv",sep = "")
file_out_name
write.csv(final_blah, file_out_name )
geno <- read.csv("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/Data/Full_dataset/geno_full.csv")
final_blah$geno <- geno$x
final_blah$geno
#precision and recall per image
prec2 <- final_blah$tp/(final_blah$tp + final_blah$fp)
reca2 <-final_blah$tp/(final_blah$tp + final_blah$fn)
F1_2 <- 2*(prec2*reca2/(prec2 + reca2))
final_blah$prec2 <- prec2
final_blah$reca2 <- reca2
final_blah$F1_2 <-  F1_2
p_g_tt <- t.test(final_blah$prec2 ~ final_blah$geno)
p_g_tt_p <- p_g_tt$p.value
r_g_tt <- t.test(final_blah$reca2 ~ final_blah$geno)
r_g_tt_p <- r_g_tt$p.value
F1_g_tt <- t.test(final_blah$F1_2 ~ final_blah$geno)
F1_g_tt_p <- F1_g_tt$p.value
p_g_tt
r_g_tt
F1_g_tt
mean_F1_gp <-(F1_g_tt$estimate[1])
mean_F1_wt <-(F1_g_tt$estimate[2])
p_g_tt_p <- p_g_tt$p.value
r_g_tt_p <- r_g_tt$p.value
row_row <- cbind(class,prec,reca,F1,F1_g_tt_p, mean_F1_gp,mean_F1_wt, p_g_tt_p,r_g_tt_p)
wt_prec_sd <-sd(final_blah$prec2[final_blah$geno == "wt"])
gp_prec_sd <-sd(final_blah$prec2[final_blah$geno == "gp"])
wt_reca_sd <-sd(final_blah$reca2[final_blah$geno == "wt"])
gp_reca_sd <-sd(final_blah$reca2[final_blah$geno == "gp"])
df2 <-  cbind(c("wt","wt", "gp", "gp"), c("precision", "recall", "precision", "recall"), as.numeric(c(p_g_tt$estimate[2], r_g_tt$estimate[2], p_g_tt$estimate[1],r_g_tt$estimate[1])),
as.numeric(c(wt_prec_sd,wt_reca_sd,gp_prec_sd,gp_reca_sd)) )
df2 <- data.frame(df2)
names(df2) <-c("Genotype", "measurement", "mean", "sd")
df2$mean <-as.numeric(df2$mean)
df2$sd <-as.numeric(df2$sd)
df2
df2$Genotype <- factor(df2$Genotype, levels = c("wt", "gp"))
library(ggplot2)
X11()
ggplot(df2, aes(x=as.factor(Genotype), y=mean, fill=measurement)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15))
###doing the counts/mean density analysis
final_blah$hand_count <- hand_final$count_h
final_blah$auto_count <- final_blah$tp + final_blah$fp
t.test(final_blah$auto_count ~ final_blah$geno)
t.test(final_blah$hand_count ~ final_blah$geno)
row_row
stat_info <- cbind(class,prec,reca,F1,F1_g_tt_p, mean_F1_gp,mean_F1_wt, p_g_tt_p,r_g_tt_p)
stat_info
getwd()
setwd("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/")
class
paste0("Data/Full_dataset/stat", class, ".csv")
paste0("Data/Full_dataset/stat_info_", class, ".csv")
write.csv(stat_info, paste0("Data/Full_dataset/stat_info_", class, ".csv"))
rownames(stat_info)
rownames(stat_info) <- NA
write.csv(stat_info, paste0("Data/Full_dataset/stat_info_", class, ".csv"))
stat_info <- cbind(prec,reca,F1,F1_g_tt_p, mean_F1_gp,mean_F1_wt, p_g_tt_p,r_g_tt_p)
rownames(stat_info) <-class
stat_info
colnames(stat_info)< c("Precision", "Recall", "F1", "F1_t.test_p_val.","Mean_F1_gp", "Mean_F1_wt", "Precision_geno_t.test", "Recall_geno_t.test")
colnames(stat_info)<- c("Precision", "Recall", "F1", "F1_t.test_p_val.","Mean_F1_gp", "Mean_F1_wt", "Precision_geno_t.test", "Recall_geno_t.test")
stat_info
write.csv(stat_info, paste0("Data/Full_dataset/stat_info_", class, ".csv"))
final_blah <- read.csv(file_out_name)
file_out_name
final_blah <- read.csv("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/Data/Full_dataset/counted2/class19/class19_Final.csv")
dim(final_blah)
geno <- read.csv("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/Data/Full_dataset/geno_full.csv")
final_blah$geno <- geno$x
#precision and recall per image
prec2 <- final_blah$tp/(final_blah$tp + final_blah$fp)
reca2 <-final_blah$tp/(final_blah$tp + final_blah$fn)
F1_2 <- 2*(prec2*reca2/(prec2 + reca2))
final_blah$prec2 <- prec2
final_blah$reca2 <- reca2
final_blah$F1_2 <-  F1_2
p_g_tt <- t.test(final_blah$prec2 ~ final_blah$geno)
p_g_tt_p <- p_g_tt$p.value
r_g_tt <- t.test(final_blah$reca2 ~ final_blah$geno)
r_g_tt_p <- r_g_tt$p.value
F1_g_tt <- t.test(final_blah$F1_2 ~ final_blah$geno)
F1_g_tt_p <- F1_g_tt$p.value
mean_F1_gp <-(F1_g_tt$estimate[1])
mean_F1_wt <-(F1_g_tt$estimate[2])
p_g_tt_p <- p_g_tt$p.value
r_g_tt_p <- r_g_tt$p.value
stat_info <- cbind(prec,reca,F1,F1_g_tt_p, mean_F1_gp,mean_F1_wt, p_g_tt_p,r_g_tt_p)
rownames(stat_info) <-class
colnames(stat_info)<- c("Precision", "Recall", "F1", "F1_t.test_p_val.","Mean_F1_gp", "Mean_F1_wt", "Precision_geno_t.test", "Recall_geno_t.test")
write.csv(stat_info, paste0("Data/Full_dataset/stat_info_", class, ".csv"))
wt_prec_sd <-sd(final_blah$prec2[final_blah$geno == "wt"])
gp_prec_sd <-sd(final_blah$prec2[final_blah$geno == "gp"])
wt_reca_sd <-sd(final_blah$reca2[final_blah$geno == "wt"])
gp_reca_sd <-sd(final_blah$reca2[final_blah$geno == "gp"])
df2 <-  cbind(c("wt","wt", "gp", "gp"), c("precision", "recall", "precision", "recall"), as.numeric(c(p_g_tt$estimate[2], r_g_tt$estimate[2], p_g_tt$estimate[1],r_g_tt$estimate[1])),
as.numeric(c(wt_prec_sd,wt_reca_sd,gp_prec_sd,gp_reca_sd)) )
df2 <- data.frame(df2)
names(df2) <-c("Genotype", "measurement", "mean", "sd")
df2$mean <-as.numeric(df2$mean)
df2$sd <-as.numeric(df2$sd)
df2
df2$Genotype <- factor(df2$Genotype, levels = c("wt", "gp"))
library(ggplot2)
X11()
ggplot(df2, aes(x=as.factor(Genotype), y=mean, fill=measurement)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15))
###doing the counts/mean density analysis
final_blah$hand_count <- hand_final$count_h
final_blah$auto_count <- final_blah$tp + final_blah$fp
t.test(final_blah$auto_count ~ final_blah$geno)
t.test(final_blah$hand_count ~ final_blah$geno)
final_blah
file_out_name
file_out_name2 <- paste(current_loc,"/",class,"_Final_Full.csv",sep = "")
write.csv(final_blah, file_out_name2)
final_blah
final_blah <- read.csv(file_out_name2)
final_blah <- read.csv(file_out_name2)
final_blah <- read.csv("F:/Theo/full_backup_3_23_2021/Kaul_lab_work/bin_general/Data/Full_dataset/Weka_Output_Counted/class19/class19_Final_Full.csv")
final_blah
t.test(final_blah$auto_count ~ final_blah$geno)
t.test(final_blah$hand_count ~ final_blah$geno)
t.test(final_blah$hand_count[final_blah$geno == "wt"],final_blah$auto_count[final_blah$geno == "wt"])
t.test(final_blah$hand_count[final_blah$geno == "gp"],final_blah$auto_count[final_blah$geno == "gp"])
var.test(final_blah$hand_count[final_blah$geno == "wt"], final_blah$auto_count[final_blah$geno == "wt"])
var.test(final_blah$hand_count[final_blah$geno == "gp"], final_blah$auto_count[final_blah$geno == "gp"])
me_h_wt <- mean(final_blah$hand_count[final_blah$geno == "wt"])
sd_h_wt <- sd(final_blah$hand_count[final_blah$geno == "wt"])
me_h_gp <- mean(final_blah$hand_count[final_blah$geno == "gp"])
sd_h_gp <- sd(final_blah$hand_count[final_blah$geno == "gp"])
me_a_wt <- mean(final_blah$auto_count[final_blah$geno == "wt"])
sd_a_wt <- sd(final_blah$auto_count[final_blah$geno == "wt"])
me_a_gp <- mean(final_blah$auto_count[final_blah$geno == "gp"])
sd_a_gp <- sd(final_blah$auto_count[final_blah$geno == "gp"])
superdf <- read.csv("F:/Theo/iba_7_2020_autocount/Hina_IFNBKO_pair/working_images/new_val_train_etc/superdf_no_val_area_adj_8_12.csv")
dim(superdf)
head(superdf)
me_ha_wt <- mean(superdf$count_Hina_hand[superdf$geno == "wt"])
sd_ha_wt <- sd(superdf$count_Hina_hand[superdf$geno == "wt"])
me_ha_gp <- mean(superdf$count_Hina_hand[superdf$geno == "gp"])
sd_ha_gp <- sd(superdf$count_Hina_hand[superdf$geno == "gp"])
#hand count b
me_hb_wt <- mean(superdf$count_theo_hand[superdf$geno == "wt"])
sd_hb_wt <- sd(superdf$count_theo_hand[superdf$geno == "wt"])
me_hb_gp <- mean(superdf$count_theo_hand[superdf$geno == "gp"])
sd_hb_gp <- sd(superdf$count_theo_hand[superdf$geno == "gp"])
#auto count
me_a_wt <- mean(superdf$count_new_auto[superdf$geno == "wt"])
sd_a_wt <- sd(superdf$count_new_auto[superdf$geno == "wt"])
me_a_gp <- mean(superdf$count_new_auto[superdf$geno == "gp"])
sd_a_gp <- sd(superdf$count_new_auto[superdf$geno == "gp"])
df1 <- cbind(c("wt","wt","wt", "gp", "gp", "gp"), c("hand_A","hand_B", "auto", "hand_A","hand_B", "auto"),
as.numeric(c(me_ha_wt,me_hb_wt,me_a_wt,me_ha_gp,me_hb_gp,me_a_gp)),
as.numeric(c(sd_ha_wt,sd_hb_wt,sd_a_wt,sd_ha_gp,sd_hb_gp,sd_a_gp))
)
df1 <- data.frame(df1)
names(df1) <-c("Genotype", "Count", "mean", "sd")
df1
str(df1)
df1$mean <-as.numeric(df1$mean)
df1$sd <-as.numeric(df1$sd)
df1$Genotype <- factor(df1$Genotype, levels = c("wt", "gp"))
#library(ggplot2)
X11()
ggplot(df1, aes(x=as.factor(Genotype), y=mean, fill=Count)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
###trying another chart organization
df2 <- cbind(c("wt", "gp","wt", "gp","wt", "gp" ), c("hand_A","hand_A","hand_B","hand_B", "auto","auto"),
as.numeric(c(me_ha_wt,me_ha_gp, me_hb_wt,me_hb_gp,me_a_wt,me_a_gp)),
as.numeric(c(sd_ha_wt,sd_ha_gp, sd_hb_wt,sd_hb_gp,sd_a_wt,sd_a_gp))
)
df2 <- data.frame(df2)
names(df2) <-c("Genotype", "Count", "mean", "sd")
df2$mean <-as.numeric(df2$mean)
df2$sd <-as.numeric(df2$sd)
#library(ggplot2)
X11()
ggplot(df2, aes(x=as.factor(Count), y=mean, fill=Genotype)) +
geom_bar(position=position_dodge(), stat="identity", colour='black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,position=position_dodge(.9)) +
scale_fill_brewer(palette="Paired") +
theme(axis.text.y = element_text(size = 15)) +
ylim(c(0,200))
t.test(superdf$count_theo_hand[superdf$geno == "wt"] , superdf$count_Hina_hand[superdf$geno == "wt"])#NS
t.test(superdf$count_theo_hand[superdf$geno == "gp"] , superdf$count_Hina_hand[superdf$geno == "gp"])#NS
t.test(superdf$count_Hina_hand[superdf$geno == "wt"] , superdf$count_new_auto[superdf$geno == "wt"])#S 4.574e-05
t.test(superdf$count_Hina_hand[superdf$geno == "gp"] , superdf$count_new_auto[superdf$geno == "gp"])#NS 0.128
superdf$count_new_auto - final_blah$auto_count
superdf$lv[superdf$count_new_auto - final_blah$auto_count > 0]
superdf$count_new_auto <- final_blah$auto_count
t.test(superdf$count_theo_hand[superdf$geno == "wt"] , superdf$count_Hina_hand[superdf$geno == "wt"])#NS
t.test(superdf$count_theo_hand[superdf$geno == "gp"] , superdf$count_Hina_hand[superdf$geno == "gp"])#NS
t.test(superdf$count_Hina_hand[superdf$geno == "wt"] , superdf$count_new_auto[superdf$geno == "wt"])#S 4.574e-05
t.test(superdf$count_Hina_hand[superdf$geno == "gp"] , superdf$count_new_auto[superdf$geno == "gp"])#NS 0.128
t.test(superdf$count_theo_hand[superdf$geno == "wt"] , superdf$count_new_auto[superdf$geno == "wt"])# S 0.00028
t.test(superdf$count_theo_hand[superdf$geno == "gp"] , superdf$count_new_auto[superdf$geno == "gp"])# NS 0.58
superdf$count_new_auto <- final_blah$auto_count
t.test(superdf$count_theo_hand[superdf$geno == "wt"] , superdf$count_Hina_hand[superdf$geno == "wt"])#NS
t.test(superdf$count_theo_hand[superdf$geno == "gp"] , superdf$count_Hina_hand[superdf$geno == "gp"])#NS
t.test(superdf$count_Hina_hand[superdf$geno == "wt"] , superdf$count_new_auto[superdf$geno == "wt"])#S 4.574e-05
t.test(superdf$count_Hina_hand[superdf$geno == "gp"] , superdf$count_new_auto[superdf$geno == "gp"])#NS 0.128
t.test(superdf$count_theo_hand[superdf$geno == "wt"] , superdf$count_new_auto[superdf$geno == "wt"])# S 0.00028
t.test(superdf$count_theo_hand[superdf$geno == "gp"] , superdf$count_new_auto[superdf$geno == "gp"])# NS 0.58
WT = lm(final_blah$hand_count[final_blah$geno == "wt"] ~final_blah$auto_count[final_blah$geno == "wt"])
summary(WT)
GP = lm(final_blah$hand_count[final_blah$geno == "gp"] ~final_blah$auto_count[final_blah$geno == "gp"])
summary(GP)
WT = lm(superdf$count_Hina_hand[final_blah$geno == "wt"] ~final_blah$auto_count[final_blah$geno == "wt"])
summary(WT)
